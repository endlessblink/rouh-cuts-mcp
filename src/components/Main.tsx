import React from 'react';
import { useCurrentFrame, AbsoluteFill, interpolate, Easing } from 'remotion';

/**
 * Main Composition - Professional Default Template
 * Auto-generated by Rough Cuts MCP for seamless user experience
 */
const Main: React.FC = () => {
  const frame = useCurrentFrame();
  
  // Safe interpolation with bounds checking
  const safeInterpolate = (
    frame: number, 
    inputRange: [number, number], 
    outputRange: [number, number], 
    easing?: any
  ) => {
    const [inputStart, inputEnd] = inputRange;
    const [outputStart, outputEnd] = outputRange;
    if (inputEnd === inputStart) return outputStart;
    if (frame <= inputStart) return outputStart;
    if (frame >= inputEnd) return outputEnd;
    return interpolate(frame, inputRange, outputRange, { easing });
  };

  // Professional animations with overlapping scenes
  const titleOpacity = safeInterpolate(frame, [0, 20], [0, 1], Easing.out(Easing.cubic)) *
                     safeInterpolate(frame, [60, 75], [1, 0], Easing.in(Easing.cubic));
  
  const subtitleOpacity = safeInterpolate(frame, [15, 35], [0, 1], Easing.out(Easing.cubic)) *
                         safeInterpolate(frame, [55, 70], [1, 0], Easing.in(Easing.cubic));

  const titleY = safeInterpolate(frame, [0, 20], [30, 0], Easing.out(Easing.cubic)) +
                safeInterpolate(frame, [60, 75], [0, -30], Easing.in(Easing.cubic));

  const subtitleY = safeInterpolate(frame, [15, 35], [20, 0], Easing.out(Easing.cubic)) +
                   safeInterpolate(frame, [55, 70], [0, -20], Easing.in(Easing.cubic));

  return (
    <AbsoluteFill 
      style={{
        backgroundColor: '#0a0a0a',
        fontFamily: 'Arial, sans-serif',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'center',
        alignItems: 'center',
        color: '#ffffff'
      }}
    >
      {/* Main Title */}
      {titleOpacity > 0.01 && (
        <div
          style={{
            opacity: titleOpacity,
            transform: `translateY(${titleY}px)`,
            fontSize: '72px',
            fontWeight: 'bold',
            textAlign: 'center',
            marginBottom: '20px',
            background: 'linear-gradient(45deg, #ffffff, #a0a0a0)',
            WebkitBackgroundClip: 'text',
            WebkitTextFillColor: 'transparent',
            backgroundClip: 'text'
          }}
        >
          Welcome to Remotion
        </div>
      )}

      {/* Subtitle */}
      {subtitleOpacity > 0.01 && (
        <div
          style={{
            opacity: subtitleOpacity,
            transform: `translateY(${subtitleY}px)`,
            fontSize: '24px',
            textAlign: 'center',
            color: '#cccccc',
            maxWidth: '800px',
            lineHeight: 1.4
          }}
        >
          Professional video creation with React components
        </div>
      )}

      {/* Animated accent line */}
      <div
        style={{
          width: `${safeInterpolate(frame, [10, 50], [0, 200])}px`,
          height: '3px',
          backgroundColor: '#4a9eff',
          marginTop: '30px',
          opacity: safeInterpolate(frame, [10, 30], [0, 1]) *
                  safeInterpolate(frame, [50, 70], [1, 0])
        }}
      />
    </AbsoluteFill>
  );
};

export default Main;